$mdc-media-queries: (
  xlarge: 1440px, // screen 12 columns
  large: 1024px, // screen 12 columns
  medium: 840px, // tablet 12 columns
  small: 600px, // tablet 8 columns
  xsmall: 480px // handset 4 columns
) !default;

// returns the lower grid boundary or null if the smallest grid is selected
@function mdc-media-queries-breakpoint-min($size) {
  @if not map-has-key($mdc-media-queries, $size) {
    @error "Invalid style specified! Choose one of #{map-keys($mdc-media-queries)}";
  }
  $min: map-get($mdc-media-queries-breakpoints, $size);

  @return if($min > 0, $min, null);
}

// returns the upper grid boundary or null if the largest grid is selected
@function mdc-media-queries-breakpoint-max($size) {
  @if not map-has-key($mdc-media-queries, $size) {
    @error "Invalid style specified! Choose one of #{map-keys($mdc-media-queries)}";
  }
  $names: map-keys($mdc-media-queries);
  $n: index($names, $size);
  $prev: if($n > 1, nth($names, $n - 1), null);

  @return if($prev, (mdc-media-queries-breakpoint-min($prev) - 1px), null);
}

// Private mixins, meant for internal use.
@mixin mdc-layout-grid-media-query_($size) {
  @if not map-has-key($mdc-media-queries, $size) {
    @error "Invalid style specified! Choose one of #{map-keys($mdc-media-queries)}";
  }

  $min: mdc-media-queries-breakpoint-min($size);
  $max: mdc-media-queries-breakpoint-max($size);

  @if $min == null and $max != null {
    // xlarge
    @media (max-width: $max) {
      @content;
    }
  } @else if $min != null and $max != null {
    // large    // medium    // small
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $min != null and $max == null {
    // xsmall
    @media (min-width: $min) {
      @content;
    }
  } @else {
    // Fallback - no breakpoints defined
    @content;
  }
}

// postcss-bem-linter: define layout-grid
.mdc-image-list {
  @each $size in map-keys($mdc-media-queries) {
    @include mdc-layout-grid-media-query_($size) {
      $margin: map-get($mdc-layout-grid-default-margin, $size);

      @include mdc-layout-grid($size, $margin, $mdc-layout-grid-max-width);
    }
  }
}
